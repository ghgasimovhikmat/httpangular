{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getUsers() {\n    const myHeaders = new HttpHeaders().set('myHeader', 'headerValue');\n    return this.http.get(`${this.apiUrl}/users`, {\n      headers: myHeaders\n    });\n  }\n  getUser() {\n    return this.http.get(`${this.apiUrl}/users/1`);\n  }\n  createUser(user) {\n    return this.http.post(`${this.apiUrl}/users`, user);\n  }\n  updateUser(user) {\n    return this.http.put(`${this.apiUrl}/users/${user.id}`, user);\n  }\n  patchUser(user) {\n    return this.http.put(`${this.apiUrl}/users/${user.id}`, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAS,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAI1D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADhB,WAAM,GAACH,WAAW,CAACI,MAAM;EACM;EAEvCC,QAAQ;IACN,MAAMC,SAAS,GAAG,IAAIP,WAAW,EAAE,CAACQ,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC;IAClE,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAE;MAACK,OAAO,EAAEH;IAAS,CAAC,CAAC;EAC5E;EACAI,OAAO;IACL,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAO,GAAG,IAAI,CAACJ,MAAM,UAAU,CAAC;EACtD;EACAO,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAO,GAAG,IAAI,CAACT,MAAM,QAAQ,EAACQ,IAAI,CAAC;EAC1D;EACAE,UAAU,CAACF,IAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACX,MAAM,UAAUQ,IAAI,CAACI,EAAE,EAAE,EAACJ,IAAI,CAAC;EACpE;EACAK,SAAS,CAACL,IAAS;IACjB,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACX,MAAM,UAAUQ,IAAI,CAACI,EAAE,EAAE,EAACJ,IAAI,CAAC;EACpE;EACAM,UAAU,CAACF,EAAS;IAClB,OAAO,IAAI,CAACb,IAAI,CAACgB,MAAM,CAAU,GAAG,IAAI,CAACf,MAAM,UAAUY,EAAE,EAAE,CAAC;EAChE;;AAtBWf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["HttpHeaders","environment","UserService","constructor","http","apiUrl","getUsers","myHeaders","set","get","headers","getUser","createUser","user","post","updateUser","put","id","patchUser","deleteUser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hikmatdell\\source\\repos\\angularhttp\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../interface/user';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl=environment.apiUrl;\n  constructor(private http:HttpClient) { }\n\n  getUsers():Observable<User[]>{\n    const myHeaders = new HttpHeaders().set('myHeader', 'headerValue');\n    return this.http.get<User[]>(`${this.apiUrl}/users`, {headers: myHeaders});\n  }\n  getUser():Observable<User>{\n    return this.http.get<User>(`${this.apiUrl}/users/1`);\n  }\n  createUser(user:User):Observable<User>{\n    return this.http.post<User>(`${this.apiUrl}/users`,user);\n  }\n  updateUser(user:User):Observable<User>{\n    return this.http.put<User>(`${this.apiUrl}/users/${user.id}`,user)\n  } \n  patchUser(user:User):Observable<User>{\n    return this.http.put<User>(`${this.apiUrl}/users/${user.id}`,user)\n  } \n  deleteUser(id:number):Observable<unknown>{\n    return this.http.delete<unknown>(`${this.apiUrl}/users/${id}`)\n  } \n  //https://www.getarrays.io/courses\n  //https://www.getarrays.io/courses/1319309/lectures/30790894\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}